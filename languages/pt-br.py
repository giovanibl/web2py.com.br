# coding: utf8
{
'"update" is an optional expression like "field1=\'newvalue\'". You cannot update or delete the results of a JOIN': '"update" is an optional expression like "field1=\'newvalue\'". You cannot update or delete the results of a JOIN',
'# Grupos de usuários do web2py\n\nVocê pode submeter um novo grupo para ser listado [[aqui contact]]\n## Grupo internacional (Inglês)\n\nGrupo oficial gerenciado por Massimo Di Pierro\n\n- [[http://groups.google.com/group/web2py/ http://groups.google.com/group/web2py/ popup]]\n\n``web2py``:groupdates\n\n## Grupo Brasileiro\n\nIdioma: Português\n\n- [[http://groups.google.com/group/web2py-users-brazil http://groups.google.com/group/web2py-users-brazil popup]]\n\n``web2py-users-brazil``:groupdates\n\n## Grupo Espanhol\n\nIdioma: Espanhol\n\n- [[http://groups.google.com/group/web2py-usuarios http://groups.google.com/group/web2py-usuarios popup]]\n\n``web2py-usuarios``:groupdates\n\n## Grupo Japonês \n\nIdioma: Japonês\n\n- [[http://groups.google.com/group/web2py-japan http://groups.google.com/group/web2py-japan popup]]\n\n``web2py-japan``:groupdates\n\n## Grupo Francês\n\nIdioma: Francês\n\n- [[http://groups.google.com/group/web2py-fr http://groups.google.com/group/web2py-fr popup]]\n\n``web2py-fr``:groupdates\n': '# Grupos de usuários do web2py\r\n\r\nVocê pode submeter um novo grupo para ser listado [[aqui contact]]\r\n## Grupo internacional (Inglês)\r\n\r\nGrupo oficial gerenciado por Massimo Di Pierro\r\n\r\n- [[http://groups.google.com/group/web2py/ http://groups.google.com/group/web2py/ popup]]\r\n\r\n``web2py``:groupdates\r\n\r\n## Grupo Brasileiro\r\n\r\nIdioma: Português\r\n\r\n- [[http://groups.google.com/group/web2py-users-brazil http://groups.google.com/group/web2py-users-brazil popup]]\r\n\r\n``web2py-users-brazil``:groupdates\r\n\r\n## Grupo Espanhol\r\n\r\nIdioma: Espanhol\r\n\r\n- [[http://groups.google.com/group/web2py-usuarios http://groups.google.com/group/web2py-usuarios popup]]\r\n\r\n``web2py-usuarios``:groupdates\r\n\r\n## Grupo Japonês \r\n\r\nIdioma: Japonês\r\n\r\n- [[http://groups.google.com/group/web2py-japan http://groups.google.com/group/web2py-japan popup]]\r\n\r\n``web2py-japan``:groupdates\r\n\r\n## Grupo Francês\r\n\r\nIdioma: Francês\r\n\r\n- [[http://groups.google.com/group/web2py-fr http://groups.google.com/group/web2py-fr popup]]\r\n\r\n``web2py-fr``:groupdates\r\n',
'# web2py usergroups\n\nYou can submit a new group to be listed [[here contact]]\n## International Group (English)\n\nMain group managed by Massimo Di Pierro\n\n- [[http://groups.google.com/group/web2py/ http://groups.google.com/group/web2py/ popup]]\n\n``web2py``:groupdates\n\n## Brazilian Group\n\nPortuguese speakers group\n\n- [[http://groups.google.com/group/web2py-users-brazil http://groups.google.com/group/web2py-users-brazil popup]]\n\n``web2py-users-brazil``:groupdates\n\n## Spanish Group\n\nSpanish speakers group\n\n- [[http://groups.google.com/group/web2py-usuarios http://groups.google.com/group/web2py-usuarios popup]]\n\n``web2py-usuarios``:groupdates\n\n## Japanese Group\n\nJapanese speakers group\n\n- [[http://groups.google.com/group/web2py-japan http://groups.google.com/group/web2py-japan popup]]\n\n``web2py-japan``:groupdates\n\n## French Group\n\nFrench speakers group\n\n- [[http://groups.google.com/group/web2py-fr http://groups.google.com/group/web2py-fr popup]]\n\n``web2py-fr``:groupdates\n': '# web2py usergroups\r\n\r\nYou can submit a new group to be listed [[here contact]]\r\n## International Group (English)\r\n\r\nMain group managed by Massimo Di Pierro\r\n\r\n- [[http://groups.google.com/group/web2py/ http://groups.google.com/group/web2py/ popup]]\r\n\r\n``web2py``:groupdates\r\n\r\n## Brazilian Group\r\n\r\nPortuguese speakers group\r\n\r\n- [[http://groups.google.com/group/web2py-users-brazil http://groups.google.com/group/web2py-users-brazil popup]]\r\n\r\n``web2py-users-brazil``:groupdates\r\n\r\n## Spanish Group\r\n\r\nSpanish speakers group\r\n\r\n- [[http://groups.google.com/group/web2py-usuarios http://groups.google.com/group/web2py-usuarios popup]]\r\n\r\n``web2py-usuarios``:groupdates\r\n\r\n## Japanese Group\r\n\r\nJapanese speakers group\r\n\r\n- [[http://groups.google.com/group/web2py-japan http://groups.google.com/group/web2py-japan popup]]\r\n\r\n``web2py-japan``:groupdates\r\n\r\n## French Group\r\n\r\nFrench speakers group\r\n\r\n- [[http://groups.google.com/group/web2py-fr http://groups.google.com/group/web2py-fr popup]]\r\n\r\n``web2py-fr``:groupdates\r\n',
'## O que é web2py``TM``:sup ?\n\n---------------\nA melhor maneira de usar o web2py, é experimentá-lo.\nVocê pode usar ele online [[aqui http://www.web2py.com/demo_admin]]\nEsta é a versão idêntica do atual web2py, embora que algumas funções estão desativadas por segurança.\n---------------\nweb2py foi inspirado de Ruby on Rails e, como Rails, ele foca no desenvolvimento ágil e segue o modelo MVC. webp2y difere de Rails porque ele é baseado em Python (assim ele é rápido e mais escalável), porque ele provêm uma interface web administrativa abrangente (com isso não há necessidade de digitar comandos no shell, caso você não queira), incluindo bibliotecas para manipular vários protocolos (por exemplo XML-RPC e feeds RSS), e pode ser executado no Google App Engine.\n\nweb2py foi inspirado também de Django e, como Django, ele tem a capacidade de gerar formulários a partir das tabelas do banco de dados e inclui um amplo conjunto de validadores. Mas o web2py difere de Django, porque ele é mais compacto, fácil de aprender e não possui arquivos de configuração a nível de projeto.\n\nweb2py tem menos escrita que os framworks baseados em Java e sua sintace é muito limpo comparando com os frameworks em PHP. Isso faz com que as aplicações sejam simples para desenvolver, e fácil para ler e mantê-los.\n---------------\n[[Aqui http://www.web2py.com/examples/static/web2py_vs_others.pdf]] compara as características do web2py com outros frameworks web populares.\n---------------\n\nO web2py tem com código fonte (para qualquer Sistema Operacionail , desde que Python esteja instalado e executando) e versões para OSX e Windows. web2py não necessita de instalação. Você precisa descompactá-lo, acessar a pasta, clique sobre o web2py.py (ou web2py.exe no Windows e web2py.app no OSX) e escolher a senha para o administrador. Ele vai abrir o navegador web para você e ir direto à interface administrativa. Tudo o que precisa para fazer isso acontecer (o interpretador Python, o web server, o banco relacional, etc) já está no empacotado com o web2py. Se você precisar de mais energia para suas aplicações, você pode usar o seu web-server preferido (por exemplo, o Apache) e seu banco de dados preferido (por exemplo PostgreSQL ou Oracle).\n\nVia the admin interface you can upload a packed application, create a new application, design an application, maintain an existing application, bytecode-compile an application, pack and download an application. Everything can be done via the web-based admin interface, including editing the files that comprise your applications, clearing temp files, browsing past tickets/errors, run tests, interact with the database. If you so choose, it is also possible to interact with web2py via the Operating System shell or the Python shell.\n\nQualquer aplicação web2py é composta de Models (arquivos que representa o modelo dos seus dados), Views (arquivos que contêm a apresentação dos seus dados), Controllers (arquivos que possui a lógica de negócio e os fluxos de trabalho), Cron Jobs (tarefas que necessita ser executadas regularmente em segundo plano), Módulos (coleções reutilizáveis de classes e funções), e Arquivos Estáticos (imagens, scripts, folhas de estilo, etc.).\n\nControllers consiste de funções que são associadas pela URL e são chamadas quando a URL associada é invocada. Models são executados antes da função ser chamada, independentemente de acessar a URL (para cada app). Views são chamados quando a função retuna outros dados que não seja uma string, e renderiza os dados em formato adequado (por exemplo *.html).\n\n#### Uma aplicação web2py pode ser tão simples com um único arquivo (controllers/default.py) contendo:\n\n\n``\ndef index(): return "Hello World"\',counter=None,_class=\'boxCode\')\n``:python\n\n\nQuando **http://localhost:8000/app/default/index**é visitado, a função é chamada e ele exibe a mensagem "Hello World".\n\n\n#### Aqui já é uma aplicação mais complexa, que permite o visitado efetuar o upload de imagens dentro do banco de dados:\n\n\n``\n# no Model\ndb=DAL(\'sqlite://storage.db\')\ndb.define_table(\'image\', \n                Field(\'name\'),\n                Field(\'file\',\'upload\'))\n``:python\n\n\n``\n# no Controller\ndef index():\n    form = SQLFORM(db.image)\n    if form.accepts(request.vars, session):\n        response.flash = \'image uploaded\'\n    return dict(form = form)\n``:python\n\n``\n# na View\n{{extend \'layout.html\'}}\n<h1>Image upload form</h1>\n{{= form}}\n``:python\n\nEfetuando o upload das imagens. são renomados por segurança para evitar vulnerabilidades, armazenado no sistema de arquivos (ou banco de dados) e adicionando uma entrada correspondente ao banco de dados, associando ao arquivo. Um mecanismo embutido prevêm um envio repetido de dados no envio do formulário. Todas as o transações I/O do banco de dados é seguro por padrão. Qualquer exceção no código faz com que efetue um rollback na transação atual.\n\n---------------\nMais exemplos sobre aplicações mais complexas, pode ser encontrado [[aqui http://web2py.com/examples/default/examples]]\n---------------\n': '## O que é web2py``TM``:sup ?\r\n\r\n---------------\r\nA melhor maneira de usar o web2py, é experimentá-lo.\r\nVocê pode usar ele online [[aqui http://www.web2py.com/demo_admin]]\r\nEsta é a versão idêntica do atual web2py, embora que algumas funções estão desativadas por segurança.\r\n---------------\r\nweb2py foi inspirado de Ruby on Rails e, como Rails, ele foca no desenvolvimento ágil e segue o modelo MVC. webp2y difere de Rails porque ele é baseado em Python (assim ele é rápido e mais escalável), porque ele provêm uma interface web administrativa abrangente (com isso não há necessidade de digitar comandos no shell, caso você não queira), incluindo bibliotecas para manipular vários protocolos (por exemplo XML-RPC e feeds RSS), e pode ser executado no Google App Engine.\r\n\r\nweb2py foi inspirado também de Django e, como Django, ele tem a capacidade de gerar formulários a partir das tabelas do banco de dados e inclui um amplo conjunto de validadores. Mas o web2py difere de Django, porque ele é mais compacto, fácil de aprender e não possui arquivos de configuração a nível de projeto.\r\n\r\nweb2py tem menos escrita que os framworks baseados em Java e sua sintace é muito limpo comparando com os frameworks em PHP. Isso faz com que as aplicações sejam simples para desenvolver, e fácil para ler e mantê-los.\r\n---------------\r\n[[Aqui http://www.web2py.com/examples/static/web2py_vs_others.pdf]] compara as características do web2py com outros frameworks web populares.\r\n---------------\r\n\r\nO web2py tem com código fonte (para qualquer Sistema Operacionail , desde que Python esteja instalado e executando) e versões para OSX e Windows. web2py não necessita de instalação. Você precisa descompactá-lo, acessar a pasta, clique sobre o web2py.py (ou web2py.exe no Windows e web2py.app no OSX) e escolher a senha para o administrador. Ele vai abrir o navegador web para você e ir direto à interface administrativa. Tudo o que precisa para fazer isso acontecer (o interpretador Python, o web server, o banco relacional, etc) já está no empacotado com o web2py. Se você precisar de mais energia para suas aplicações, você pode usar o seu web-server preferido (por exemplo, o Apache) e seu banco de dados preferido (por exemplo PostgreSQL ou Oracle).\r\n\r\nVia the admin interface you can upload a packed application, create a new application, design an application, maintain an existing application, bytecode-compile an application, pack and download an application. Everything can be done via the web-based admin interface, including editing the files that comprise your applications, clearing temp files, browsing past tickets/errors, run tests, interact with the database. If you so choose, it is also possible to interact with web2py via the Operating System shell or the Python shell.\r\n\r\nQualquer aplicação web2py é composta de Models (arquivos que representa o modelo dos seus dados), Views (arquivos que contêm a apresentação dos seus dados), Controllers (arquivos que possui a lógica de negócio e os fluxos de trabalho), Cron Jobs (tarefas que necessita ser executadas regularmente em segundo plano), Módulos (coleções reutilizáveis de classes e funções), e Arquivos Estáticos (imagens, scripts, folhas de estilo, etc.).\r\n\r\nControllers consiste de funções que são associadas pela URL e são chamadas quando a URL associada é invocada. Models são executados antes da função ser chamada, independentemente de acessar a URL (para cada app). Views são chamados quando a função retuna outros dados que não seja uma string, e renderiza os dados em formato adequado (por exemplo *.html).\r\n\r\n#### Uma aplicação web2py pode ser tão simples com um único arquivo (controllers/default.py) contendo:\r\n\r\n\r\n``\r\ndef index(): return "Hello World"\',counter=None,_class=\'boxCode\')\r\n``:python\r\n\r\n\r\nQuando **http://localhost:8000/app/default/index**é visitado, a função é chamada e ele exibe a mensagem "Hello World".\r\n\r\n\r\n#### Aqui já é uma aplicação mais complexa, que permite o visitado efetuar o upload de imagens dentro do banco de dados:\r\n\r\n\r\n``\r\n# no Model\r\ndb=DAL(\'sqlite://storage.db\')\r\ndb.define_table(\'image\', \r\n                Field(\'name\'),\r\n                Field(\'file\',\'upload\'))\r\n``:python\r\n\r\n\r\n``\r\n# no Controller\r\ndef index():\r\n    form = SQLFORM(db.image)\r\n    if form.accepts(request.vars, session):\r\n        response.flash = \'image uploaded\'\r\n    return dict(form = form)\r\n``:python\r\n\r\n``\r\n# na View\r\n{{extend \'layout.html\'}}\r\n<h1>Image upload form</h1>\r\n{{= form}}\r\n``:python\r\n\r\nEfetuando o upload das imagens. são renomados por segurança para evitar vulnerabilidades, armazenado no sistema de arquivos (ou banco de dados) e adicionando uma entrada correspondente ao banco de dados, associando ao arquivo. Um mecanismo embutido prevêm um envio repetido de dados no envio do formulário. Todas as o transações I/O do banco de dados é seguro por padrão. Qualquer exceção no código faz com que efetue um rollback na transação atual.\r\n\r\n---------------\r\nMais exemplos sobre aplicações mais complexas, pode ser encontrado [[aqui http://web2py.com/examples/default/examples]]\r\n---------------\r\n',
'## What is web2py``TM``:sup\n\n---------------\nThe best way to understand web2py is to try it.\nYou can try it online [[here http://www.web2py.com/demo_admin]]\nThis online version is identical to the actual web2py although some functions are disabled for security reasons.\n---------------\n\nweb2py was inspired by Ruby on Rails and, as Rails, it focuses on rapid development and follows a Model View Controller design. web2py differs from Rails because it is based on Python (thus it is faster and more scalable), because it provides a comprehensive web-based administrative interface (thus there is no need to ever type shell commands unless you wish), includes libraries to handle more protocols (for example XML-RPC and RSS feeds), and can run on the Google App Engine.\n\nweb2py was also inspired by Django and, as Django, it has the ability to generate forms from database tables and it includes an extensive set of validators. web2py differs from Django because it is more compact, easier to learn and does not have any project-level configuration files.\n\nweb2py is less verbose than Java-based frameworks and its syntax is much cleaner than PHP-based frameworks. This makes applications simpler to develop, and easier to read and maintain.\n\n---------------\n[[Here http://www.web2py.com/examples/static/web2py_vs_others.pdf]] is a features comparison of web2py vs other popular web frameworks\n---------------\n\nweb2py comes in source code version (for any Operating System that runs Python) and in binary versions for OSX and Windows. web2py does not need to be installed. You unzip it, click on it, and choose a one-time administrator password. It then opens the browser for you and directs you to the administrative interface. Everything it needs to make this happen (the Python interpreter, the web-server, the relational database, etc.) is already packaged with web2py. If you need more power you customize your applications to use your preferred web-server (for example Apache) and your preferred database engine (for example PostgreSQL or Oracle).\n\nVia the admin interface you can upload a packed application, create a new application, design an application, maintain an existing application, bytecode-compile an application, pack and download an application. Everything can be done via the web-based admin interface, including editing the files that comprise your applications, clearing temp files, browsing past tickets/errors, run tests, interact with the database. If you so choose, it is also possible to interact with web2py via the Operating System shell or the Python shell.\n\nAny web2py application is comprised of Models (files that contain a description of the data representation), Views (files that contain a description of the data presentation), Controllers (files that contain a description of the business logic and workflow), Cron Jobs (tasks that need to be executed regularly in background), Modules (collections of reusable classes and functions), and Static Files (images, scripts, stylesheets, etc.).\n\nControllers consist of functions that are associated to a URL and are called when the associated URL is visited. Models are executed before the function is called, independently on the visited URL (for each app). Views are called when the function returns data other than a string, and renders the data in the proper format (for example html).\n\n#### A web2py application can be as simple as a single file (controllers/default.py) containing:\n\n\n``\ndef index(): return "Hello World"\',counter=None,_class=\'boxCode\')\n``:python\n\n\nWhen **http://localhost:8000/app/default/index** is visited the function is called and it displays the message "Hello World".\n\n\n#### Here is a more complex complete application that lets the visitor upload images into a database:\n\n\n``\n# in Model\ndb=DAL(\'sqlite://storage.db\')\ndb.define_table(\'image\', \n                Field(\'name\'),\n                Field(\'file\',\'upload\'))\n``:python\n\n\n``\n# in Controller\ndef index():\n    form = SQLFORM(db.image)\n    if form.accepts(request.vars, session):\n        response.flash = \'image uploaded\'\n    return dict(form = form)\n``:python\n\n``\n# in View\n{{extend \'layout.html\'}}\n<h1>Image upload form</h1>\n{{= form}}\n``:python\n\nUploaded images are safely renamed to avoid directory traversal vulnerabilities, stored on the filesystem (or database) and a corresponding entry is inserted in the database, linking the file. A built-in mechanism prevents involuntary double form submission. All DB IO is transaction safe by default. Any exception in the code causes the transaction to rollback.\n\n---------------\nExamples of more complex sample applications can be found [[here http://web2py.com/examples/default/examples]]\n---------------\n': '## What is web2py``TM``:sup\r\n\r\n---------------\r\nThe best way to understand web2py is to try it.\r\nYou can try it online [[here http://www.web2py.com/demo_admin]]\r\nThis online version is identical to the actual web2py although some functions are disabled for security reasons.\r\n---------------\r\n\r\nweb2py was inspired by Ruby on Rails and, as Rails, it focuses on rapid development and follows a Model View Controller design. web2py differs from Rails because it is based on Python (thus it is faster and more scalable), because it provides a comprehensive web-based administrative interface (thus there is no need to ever type shell commands unless you wish), includes libraries to handle more protocols (for example XML-RPC and RSS feeds), and can run on the Google App Engine.\r\n\r\nweb2py was also inspired by Django and, as Django, it has the ability to generate forms from database tables and it includes an extensive set of validators. web2py differs from Django because it is more compact, easier to learn and does not have any project-level configuration files.\r\n\r\nweb2py is less verbose than Java-based frameworks and its syntax is much cleaner than PHP-based frameworks. This makes applications simpler to develop, and easier to read and maintain.\r\n\r\n---------------\r\n[[Here http://www.web2py.com/examples/static/web2py_vs_others.pdf]] is a features comparison of web2py vs other popular web frameworks\r\n---------------\r\n\r\nweb2py comes in source code version (for any Operating System that runs Python) and in binary versions for OSX and Windows. web2py does not need to be installed. You unzip it, click on it, and choose a one-time administrator password. It then opens the browser for you and directs you to the administrative interface. Everything it needs to make this happen (the Python interpreter, the web-server, the relational database, etc.) is already packaged with web2py. If you need more power you customize your applications to use your preferred web-server (for example Apache) and your preferred database engine (for example PostgreSQL or Oracle).\r\n\r\nVia the admin interface you can upload a packed application, create a new application, design an application, maintain an existing application, bytecode-compile an application, pack and download an application. Everything can be done via the web-based admin interface, including editing the files that comprise your applications, clearing temp files, browsing past tickets/errors, run tests, interact with the database. If you so choose, it is also possible to interact with web2py via the Operating System shell or the Python shell.\r\n\r\nAny web2py application is comprised of Models (files that contain a description of the data representation), Views (files that contain a description of the data presentation), Controllers (files that contain a description of the business logic and workflow), Cron Jobs (tasks that need to be executed regularly in background), Modules (collections of reusable classes and functions), and Static Files (images, scripts, stylesheets, etc.).\r\n\r\nControllers consist of functions that are associated to a URL and are called when the associated URL is visited. Models are executed before the function is called, independently on the visited URL (for each app). Views are called when the function returns data other than a string, and renders the data in the proper format (for example html).\r\n\r\n#### A web2py application can be as simple as a single file (controllers/default.py) containing:\r\n\r\n\r\n``\r\ndef index(): return "Hello World"\',counter=None,_class=\'boxCode\')\r\n``:python\r\n\r\n\r\nWhen **http://localhost:8000/app/default/index** is visited the function is called and it displays the message "Hello World".\r\n\r\n\r\n#### Here is a more complex complete application that lets the visitor upload images into a database:\r\n\r\n\r\n``\r\n# in Model\r\ndb=DAL(\'sqlite://storage.db\')\r\ndb.define_table(\'image\', \r\n                Field(\'name\'),\r\n                Field(\'file\',\'upload\'))\r\n``:python\r\n\r\n\r\n``\r\n# in Controller\r\ndef index():\r\n    form = SQLFORM(db.image)\r\n    if form.accepts(request.vars, session):\r\n        response.flash = \'image uploaded\'\r\n    return dict(form = form)\r\n``:python\r\n\r\n``\r\n# in View\r\n{{extend \'layout.html\'}}\r\n<h1>Image upload form</h1>\r\n{{= form}}\r\n``:python\r\n\r\nUploaded images are safely renamed to avoid directory traversal vulnerabilities, stored on the filesystem (or database) and a corresponding entry is inserted in the database, linking the file. A built-in mechanism prevents involuntary double form submission. All DB IO is transaction safe by default. Any exception in the code causes the transaction to rollback.\r\n\r\n---------------\r\nExamples of more complex sample applications can be found [[here http://web2py.com/examples/default/examples]]\r\n---------------\r\n',
'## web2py``TM``:sup Documentation\n\nAqui é Here is listed knows sources of documentation on web2py\nyou can submit your own source [[here contact]]\n': '## web2py``TM``:sup Documentation\r\n\r\nAqui é Here is listed knows sources of documentation on web2py\r\nyou can submit your own source [[here contact]]\r\n',
'## web2py``TM``:sup Documentation\n\nAqui é listado fontes conhecidas com documentação sobre web2py, você pode submeter sua propria fonte [[aqui contact]].\n': '## web2py``TM``:sup Documentation\r\n\r\nAqui é listado fontes conhecidas com documentação sobre web2py, você pode submeter sua propria fonte [[aqui contact]].\r\n',
'## web2py``TM``:sup Documentação\n\nAqui é listado fontes conhecidas de documentação sobre web2py, você pode submeter sua propria fonte [[aqui contact]].\n': '## web2py``TM``:sup Documentação\r\n\r\nAqui é listado fontes conhecidas de documentação sobre web2py, você pode submeter sua propria fonte [[aqui contact]].\r\n',
'## web2py``TM``:sup Documentação\n\nAqui é listado fontes conhecidas de documentação sobre web2py, você pode submeter sua propria fonte [[aqui contact]].\n\n{{=response}}\n': '## web2py``TM``:sup Documentação\r\n\r\nAqui é listado fontes conhecidas de documentação sobre web2py, você pode submeter sua propria fonte [[aqui contact]].\r\n\r\n{{=response}}\r\n',
'## web2py``TM``:sup Framework Web Empresarial\nFramework open source completo  para desenvolvimento rápido, escalavel, [[seguro http://www.web2py.com/book/default/chapter/01#security popup]] e portavel de aplicações web orientadas a banco de dados. Escrito e programado em [[Python http://www.python.org popup]]. [[Licença LGPLv3 http://www.gnu.org/licenses/lgpl.html]]\n': '## web2py``TM``:sup Framework Web Empresarial\r\nFramework open source completo  para desenvolvimento rápido, escalavel, [[seguro http://www.web2py.com/book/default/chapter/01#security popup]] e portavel de aplicações web orientadas a banco de dados. Escrito e programado em [[Python http://www.python.org popup]]. [[Licença LGPLv3 http://www.gnu.org/licenses/lgpl.html]]\r\n',
'### Community sources\n\n#### Sites\n- [[web2pyslices (recipes) http://web2pyslices.com popup]]\n- [[web2py utils documentation http://packages.python.org/web2py_utils/ popup]]\n- [[web2pybrasil http://www.web2pybrasil.com.br popup]]   \n- Apostila em português [[Download http://dl.dropbox.com/u/830444/apostila_web2py_basico.pdf popup]] e [[Online http://web2pybrasil.appspot.com/init/plugin_wiki/page/curso-web2py-000 popup]]\n- [[Sitio en español http://www.web2py.com.ar popup]]\n- [[Documentación en español http://www.web2py.com.ar/examples/default/docs popup]]\n': '### Community sources\r\n\r\n#### Sites\r\n- [[web2pyslices (recipes) http://web2pyslices.com popup]]\r\n- [[web2py utils documentation http://packages.python.org/web2py_utils/ popup]]\r\n- [[web2pybrasil http://www.web2pybrasil.com.br popup]]   \r\n- Apostila em português [[Download http://dl.dropbox.com/u/830444/apostila_web2py_basico.pdf popup]] e [[Online http://web2pybrasil.appspot.com/init/plugin_wiki/page/curso-web2py-000 popup]]\r\n- [[Sitio en español http://www.web2py.com.ar popup]]\r\n- [[Documentación en español http://www.web2py.com.ar/examples/default/docs popup]]\r\n',
'### Documentação Oficial\n\n#### Livros\n- [[**Livro online completo sobre web2py (Inglês)** book popup]]\n- [[web2py book (spanish) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\n- [[buy e-book/printed version http://stores.lulu.com/web2py popup]]\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\n': '### Documentação Oficial\r\n\r\n#### Livros\r\n- [[**Livro online completo sobre web2py (Inglês)** book popup]]\r\n- [[web2py book (spanish) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\r\n- [[buy e-book/printed version http://stores.lulu.com/web2py popup]]\r\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\r\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\r\n',
'### Documentação Oficial\n\n#### Livros\n- [[**Livro online completo sobre web2py (Inglês)** http://web2py.com/book popup]]\n- [[Livro online sobre web2py (Espanhol) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\n- [[Compre o e-book ou versão impressa http://stores.lulu.com/web2py popup]]\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\n': '### Documentação Oficial\r\n\r\n#### Livros\r\n- [[**Livro online completo sobre web2py (Inglês)** http://web2py.com/book popup]]\r\n- [[Livro online sobre web2py (Espanhol) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\r\n- [[Compre o e-book ou versão impressa http://stores.lulu.com/web2py popup]]\r\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\r\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\r\n',
'### Documentação Oficial\n\n#### Livros\n- [[**Livro online completo sobre web2py (Inglês)** http://web2py.com/book popup]]\n- [[Livro online sobre web2py (Espanhol) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\n- [[Compre o e-book/ou versão impressa http://stores.lulu.com/web2py popup]]\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\n': '### Documentação Oficial\r\n\r\n#### Livros\r\n- [[**Livro online completo sobre web2py (Inglês)** http://web2py.com/book popup]]\r\n- [[Livro online sobre web2py (Espanhol) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\r\n- [[Compre o e-book/ou versão impressa http://stores.lulu.com/web2py popup]]\r\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\r\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\r\n',
'### Fontes da Comunidade\n\n#### Sites\n- [[web2pyslices (receitas de bolo) http://web2pyslices.com popup]]\n- [[Documentações uteis sobre web2py http://packages.python.org/web2py_utils/ popup]]\n- [[web2pybrasil http://www.web2pybrasil.com.br popup]]   \n- Apostila em português [[Download http://dl.dropbox.com/u/830444/apostila_web2py_basico.pdf popup]] e [[Online http://web2pybrasil.appspot.com/init/plugin_wiki/page/curso-web2py-000 popup]]\n- [[Site em espanhol http://www.web2py.com.ar popup]]\n- [[Documentação em espanhol http://www.web2py.com.ar/examples/default/docs popup]]\n': '### Fontes da Comunidade\r\n\r\n#### Sites\r\n- [[web2pyslices (receitas de bolo) http://web2pyslices.com popup]]\r\n- [[Documentações uteis sobre web2py http://packages.python.org/web2py_utils/ popup]]\r\n- [[web2pybrasil http://www.web2pybrasil.com.br popup]]   \r\n- Apostila em português [[Download http://dl.dropbox.com/u/830444/apostila_web2py_basico.pdf popup]] e [[Online http://web2pybrasil.appspot.com/init/plugin_wiki/page/curso-web2py-000 popup]]\r\n- [[Site em espanhol http://www.web2py.com.ar popup]]\r\n- [[Documentação em espanhol http://www.web2py.com.ar/examples/default/docs popup]]\r\n',
'### Fontes da Comunidade\n\n#### Sites\n- [[web2pyslices (receitas de bolo) http://web2pyslices.com popup]]\n- [[web2py utils documentation http://packages.python.org/web2py_utils/ popup]]\n- [[web2pybrasil http://www.web2pybrasil.com.br popup]]   \n- Apostila em português [[Download http://dl.dropbox.com/u/830444/apostila_web2py_basico.pdf popup]] e [[Online http://web2pybrasil.appspot.com/init/plugin_wiki/page/curso-web2py-000 popup]]\n- [[Sitio en español http://www.web2py.com.ar popup]]\n- [[Documentación en español http://www.web2py.com.ar/examples/default/docs popup]]\n': '### Fontes da Comunidade\r\n\r\n#### Sites\r\n- [[web2pyslices (receitas de bolo) http://web2pyslices.com popup]]\r\n- [[web2py utils documentation http://packages.python.org/web2py_utils/ popup]]\r\n- [[web2pybrasil http://www.web2pybrasil.com.br popup]]   \r\n- Apostila em português [[Download http://dl.dropbox.com/u/830444/apostila_web2py_basico.pdf popup]] e [[Online http://web2pybrasil.appspot.com/init/plugin_wiki/page/curso-web2py-000 popup]]\r\n- [[Sitio en español http://www.web2py.com.ar popup]]\r\n- [[Documentación en español http://www.web2py.com.ar/examples/default/docs popup]]\r\n',
'### Mais recursos\n\n- [[Videos http://www.web2py.com/examples/default/videos/ popup]]\n- [[Exemplos rápidos http://web2py.com/examples/default/examples popup]]\n- [[FAQ http://www.web2py.com/AlterEgo popup]]\n- [[Aplicações free http://web2py.com/appliances popup]]\n- [[User Voice http://web2py.uservoice.com/ popup]]\n- [[Layouts http://web2py.com/layouts popup]]\n- [[Plugins http://web2py.com/plugins popup]]\n': '### Mais recursos\r\n\r\n- [[Videos http://www.web2py.com/examples/default/videos/ popup]]\r\n- [[Exemplos rápidos http://web2py.com/examples/default/examples popup]]\r\n- [[FAQ http://www.web2py.com/AlterEgo popup]]\r\n- [[Aplicações free http://web2py.com/appliances popup]]\r\n- [[User Voice http://web2py.uservoice.com/ popup]]\r\n- [[Layouts http://web2py.com/layouts popup]]\r\n- [[Plugins http://web2py.com/plugins popup]]\r\n',
'### Mais recursos\n\n- [[videos http://www.web2py.com/examples/default/videos/ popup]]\n- [[Exemplos rápidos http://web2py.com/examples/default/examples popup]]\n- [[FAQ http://www.web2py.com/AlterEgo popup]]\n- [[Aplicações free http://web2py.com/appliances popup]]\n- [[User Voice http://web2py.uservoice.com/ popup]]\n- [[web2py utils http://packages.python.org/web2py_utils/ popup]]\n- [[Layouts http://web2py.com/layouts popup]]\n- [[Plugins http://web2py.com/plugins popup]]\n': '### Mais recursos\r\n\r\n- [[videos http://www.web2py.com/examples/default/videos/ popup]]\r\n- [[Exemplos rápidos http://web2py.com/examples/default/examples popup]]\r\n- [[FAQ http://www.web2py.com/AlterEgo popup]]\r\n- [[Aplicações free http://web2py.com/appliances popup]]\r\n- [[User Voice http://web2py.uservoice.com/ popup]]\r\n- [[web2py utils http://packages.python.org/web2py_utils/ popup]]\r\n- [[Layouts http://web2py.com/layouts popup]]\r\n- [[Plugins http://web2py.com/plugins popup]]\r\n',
'### More resources\n\n- [[videos http://www.web2py.com/examples/default/videos/ popup]]\n- [[Quick Examples http://web2py.com/examples/default/examples popup]]\n- [[FAQ http://www.web2py.com/AlterEgo popup]]\n- [[Appliances http://web2py.com/appliances popup]]\n- [[User Voice http://web2py.uservoice.com/ popup]]\n- [[web2py utils http://packages.python.org/web2py_utils/ popup]]\n- [[Layouts http://web2py.com/layouts popup]]\n- [[Plugins http://web2py.com/plugins popup]]\n': '### More resources\r\n\r\n- [[videos http://www.web2py.com/examples/default/videos/ popup]]\r\n- [[Quick Examples http://web2py.com/examples/default/examples popup]]\r\n- [[FAQ http://www.web2py.com/AlterEgo popup]]\r\n- [[Appliances http://web2py.com/appliances popup]]\r\n- [[User Voice http://web2py.uservoice.com/ popup]]\r\n- [[web2py utils http://packages.python.org/web2py_utils/ popup]]\r\n- [[Layouts http://web2py.com/layouts popup]]\r\n- [[Plugins http://web2py.com/plugins popup]]\r\n',
'### Official documentation\n\n#### Books\n- [[**web2py full/free online book (english)** http://web2py.com/book popup]]\n- [[web2py book (spanish) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\n- [[buy e-book/printed version http://stores.lulu.com/web2py popup]]\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\n': '### Official documentation\r\n\r\n#### Books\r\n- [[**web2py full/free online book (english)** http://web2py.com/book popup]]\r\n- [[web2py book (spanish) http://www.latinuxpress.com/books/drafts/web2py/ popup]]\r\n- [[buy e-book/printed version http://stores.lulu.com/web2py popup]]\r\n- [[Epydoc http://www.web2py.com/examples/static/epydoc/index.html popup]]\r\n- [[API http://web2py.com/book/default/chapter/04#API popup]]\r\n',
'### Porque web2py ?\n\n- **Criado por uma communidade de profissionais** e professores universitários em Ciência da Computação e Engenharia de Software.\n- **Sempre mantem compatibilidade com versões anteriores.** Nós não quebramos a compatibilidade com versões anteriores desde a versão 1.0 de 2007, e nós estamos comprometidos a não quebra-la no futuro.\n- **Fácil para executar.** Não é necessário instalação ou configuração.\n- **Funciona no** Windows, Mac, Unix/Linux, Google App Engine, Amazon EC2, e na maioria das hospedagens web para Python 2.4/2.5/2.6/2.7, ou Java com Jython.\n- **Funciona com** Apache, Lighttpd, Cherokee e com a maioria dos outros servidores web via CGI, FastCGI, WSGI, mod_proxy, e/ou mod_python. Isto pode embutir aplicações WSGI de terceiros e middleware.\n- **Compatível com** SQLite, PostgreSQL, MySQL, MSSQL, FireBird, Oracle, IBM DB2, Informix, Ingres, and Google App Engine. \n- **Seguro** [[Isto previne a maioria das vulnerabilidades conhecidas examples/default/security]] incluindo Cross Site Scripting, Falhas de Injeção, e Execução de Arquivos Maliciosos.\n- **Estimula o uso de boas práticas de Engenharia de Software** (padrão Modelo-Visão-Controlador (MVC), Validação de formulários no lado do servidor, postagens) que tornam o codigo mais legível, escalavel e de simples manutenção.\n- **Compatível com multiplos protocolos** HTML/XML, RSS/ATOM, RTF, PDF, JSON, AJAX, XML-RPC, CSV, REST, WIKI, Flash/AMF, e Linked Data (RDF). \n- **Inclui** um servidor com SSL ativado e capaz de realizar streaming, um banco de dados relacional, um ambiente integrado para desenvolvimento e interface de administração baseada na web, uma camada de abstração de banco de dados (DAL) que escreve SQL para você em tempo real, suporte para internationalização, multiplos métodos de autenticação, controle de acesso baseado em papéis, um sistema de log e tickets de erros, multiplos metódos de cache para escalabilidade, a bliblioteca jQuery para AJAX e efeitos. [[Saiba mais... examples/default/what]]\n': '### Porque web2py ?\r\n\r\n- **Criado por uma communidade de profissionais** e professores universitários em Ciência da Computação e Engenharia de Software.\r\n- **Sempre mantem compatibilidade com versões anteriores.** Nós não quebramos a compatibilidade com versões anteriores desde a versão 1.0 de 2007, e nós estamos comprometidos a não quebra-la no futuro.\r\n- **Fácil para executar.** Não é necessário instalação ou configuração.\r\n- **Funciona no** Windows, Mac, Unix/Linux, Google App Engine, Amazon EC2, e na maioria das hospedagens web para Python 2.4/2.5/2.6/2.7, ou Java com Jython.\r\n- **Funciona com** Apache, Lighttpd, Cherokee e com a maioria dos outros servidores web via CGI, FastCGI, WSGI, mod_proxy, e/ou mod_python. Isto pode embutir aplicações WSGI de terceiros e middleware.\r\n- **Compatível com** SQLite, PostgreSQL, MySQL, MSSQL, FireBird, Oracle, IBM DB2, Informix, Ingres, and Google App Engine. \r\n- **Seguro** [[Isto previne a maioria das vulnerabilidades conhecidas examples/default/security]] incluindo Cross Site Scripting, Falhas de Injeção, e Execução de Arquivos Maliciosos.\r\n- **Estimula o uso de boas práticas de Engenharia de Software** (padrão Modelo-Visão-Controlador (MVC), Validação de formulários no lado do servidor, postagens) que tornam o codigo mais legível, escalavel e de simples manutenção.\r\n- **Compatível com multiplos protocolos** HTML/XML, RSS/ATOM, RTF, PDF, JSON, AJAX, XML-RPC, CSV, REST, WIKI, Flash/AMF, e Linked Data (RDF). \r\n- **Inclui** um servidor com SSL ativado e capaz de realizar streaming, um banco de dados relacional, um ambiente integrado para desenvolvimento e interface de administração baseada na web, uma camada de abstração de banco de dados (DAL) que escreve SQL para você em tempo real, suporte para internationalização, multiplos métodos de autenticação, controle de acesso baseado em papéis, um sistema de log e tickets de erros, multiplos metódos de cache para escalabilidade, a bliblioteca jQuery para AJAX e efeitos. [[Saiba mais... examples/default/what]]\r\n',
'%Y-%m-%d': '%Y-%m-%d',
'%Y-%m-%d %H:%M:%S': '%Y-%m-%d %H:%M:%S',
'%s rows deleted': '%s rows deleted',
'%s rows updated': '%s rows updated',
'About': 'Sobre',
'Attributes': 'Attributes',
'Available databases and tables': 'Available databases and tables',
'Cannot be empty': 'Cannot be empty',
'Check to delete': 'Check to delete',
'Current request': 'Current request',
'Current response': 'Current response',
'Current session': 'Current session',
'Delete:': 'Delete:',
'Description': 'Description',
'Docs for': 'Docs for',
'Documentation': 'Documentação',
'Download': 'Download',
'Edit current record': 'Edit current record',
'F.A.Q.': 'F.A.Q.',
'Free appliances': 'Aplicações Free',
'Hello World': 'Hello World',
'Hello World in a flash!': 'Hello World in a flash!',
'Home': 'Início',
'Implementações recentes': 'Implementações recentes',
'Import/Export': 'Import/Export',
'Interactive demo': 'Demonstração Interativa',
'Internal State': 'Internal State',
'Invalid Query': 'Invalid Query',
'Latest Stable': 'Ultima versão estável',
'Live Chat (IRC)': 'Live Chat (IRC)',
'New Record': 'New Record',
'No databases in this application': 'No databases in this application',
'Plugins': 'Plugins',
'Query:': 'Query:',
'Quick Examples': 'Exemplos Rápidos',
'Rows in table': 'Rows in table',
'Rows selected': 'Rows selected',
'Staff': 'Time',
'Support': 'Suporte',
'Sure you want to delete this object?': 'Sure you want to delete this object?',
'The "query" is a condition like "db.table1.field1==\'value\'". Something like "db.table1.field1==db.table2.field2" results in a SQL JOIN.': 'The "query" is a condition like "db.table1.field1==\'value\'". Something like "db.table1.field1==db.table2.field2" results in a SQL JOIN.',
'Ultimas postagens no fórum de usuários': 'Ultimas postagens no fórum de usuários',
'Update:': 'Update:',
'Use (...)&(...) for AND, (...)|(...) for OR, and ~(...)  for NOT to build more complex queries.': 'Use (...)&(...) for AND, (...)|(...) for OR, and ~(...)  for NOT to build more complex queries.',
'User Voice': 'User Voice',
'User groups': 'Grupos de usuários',
'Videos': 'Videos',
'appadmin is disabled because insecure channel': 'appadmin is disabled because insecure channel',
'cache': 'cache',
'click me to count': 'click me to count',
'data uploaded': 'data uploaded',
'database': 'database',
'database %s select': 'database %s select',
'db': 'db',
'design': 'design',
'done!': 'done!',
'enter an integer between %(min)g and %(max)g': 'enter an integer between %(min)g and %(max)g',
'export as csv file': 'export as csv file',
'insert new': 'insert new',
'insert new %s': 'insert new %s',
'invalid request': 'invalid request',
'new record inserted': 'new record inserted',
'next 100 rows': 'next 100 rows',
'or import from csv file': 'or import from csv file',
'previous 100 rows': 'previous 100 rows',
'record': 'record',
'record does not exist': 'record does not exist',
'record id': 'record id',
'selected': 'selected',
'state': 'state',
'table': 'table',
'unable to parse csv file': 'unable to parse csv file',
'web2py Enterprise Web Framework': 'web2py Framework Web Empresarial',
'web2py videos': 'web2py videos',
'web2py, Python, Enterprise Web Framework': 'web2py, Python, Framework Web Empresarial',
}
